version: "3.8"

services:
  server:
    build:
      context: .
      dockerfile: services/nginx/nginx.dockerfile
    ports:
      - '8000:80'
    volumes:
      - ./src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - mysql

  php:
    build:
      context: .
      dockerfile: services/php/php.dockerfile
    volumes:
      - ./src:/var/www/html

  mysql:
    image: mysql:latest
    env_file:
      - services/mysql/mysql.env
    networks:
      dockerbridge.local:
        ipv4_address: 192.168.10.50

  redis:
    image: redis:latest
    ports:
      - '6379:6379'
    volumes:
      - laravel-dockerized-redis:/data
    networks:
      dockerbridge.local:
        ipv4_address: 192.168.0.60

  composer:
    build:
      context: .
      dockerfile: services/composer/composer.dockerfile
    volumes:
      - ./src:/var/www/html

  artisan:
    build:
      context: .
      dockerfile: services/php/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: [ "php", "/var/www/html/artisan" ]

  npm:
    image: node:14
    working_dir: /var/www/html
    entrypoint: [ "npm" ]
    volumes:
      - ./src:/var/www/html

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1
    networks:
      dockerbridge.local:
        ipv4_address: 192.168.10.80

volumes:
  laravel-dockerized-redis:
    driver: local

networks:
  dockerbridge.local:
    name: laravel_dockerized_network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/24
